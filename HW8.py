import numpy as np
import matplotlib.pyplot as plt

# Question 1
a = np.linspace(-1, 1, 100)
N = 100
q = 1 + (2*(N-1)/ N + 1)*a**2

plt.plot(a, q)
plt.show()

# Question 2
data = np.array([10.392869085445,	8.86842267884991,	11.7587949780397,	12.5071551360232,	9.45444649475575,	8.30090585545871,	10.2768873591922,	14.3320526777092,	12.1074992138691,	7.20920378640904,	6.10095854391836,	13.8022074476242,	16.7197926409147,	9.37776961641473,	5.56830402510534,	6.52331287491485,	13.2079692261314,	16.2071470563853,	10.9058737391314,	6.0288929425827,	8.00515072264996,	13.5255609871453,	14.2856966215857,	10.3326546095634,	7.33637650603228,	6.30067348064652,	14.6032026349505,	15.9484619396151,	8.04585104037332,	5.288477927298,	10.014761976028,	14.9974010525174,	15.0271394351953,	8.77160394240403,	4.1810046941455,	9.45235852626064,	14.1556317642198,	13.809452653464,	6.71628959941364,	4.1587285405057,	13.0591249337434,	16.6241641703646,	11.9593580889923,	5.82015353380766,	6.51750345838435,	14.2634041243239,	13.5819470648333,	10.7201346259309,	7.49527857506138,	7.37340254599364,	11.7340023937222,	15.612785523318,	9.97154468729397,	5.39316332139485,	7.57308956577761,	11.9322514520194,	15.3380790133194,	10.5715880375748,	6.02186697668478,	6.67922515325275,	13.2983403490855,	16.4784433964143,	12.5400164010572,	6.4164925850124,	5.26265043423348,	10.8973278878294,	17.5185550151365,	14.2005231951656,	4.95866457211097,	3.64269454975906,	13.2867695368168,	19.1043202431077,	11.1932854457587,	3.38837983078254,	5.48372586104827,	15.9346143231599,	17.9247539109268,	7.57781409727351,	3.77137024824617,	9.01089150627724,	16.2624728809226,	14.8944907768578,	7.64712778719182,	4.87579051691331,	10.2077631172655,	16.3713997434711,	12.8439778701327,	6.91138685644805,	5.60302225257212,	10.894314882346,	14.6214534084564,	12.7882686866726,	9.87307569861377,	4.94585485881624,	9.57521722188647,	14.9544653500494,	14.573475370199,	8.67839508647494,	5.59109210226332,	10.5400016805857])
N = data.size

mu_x = sum(data) / N
print(f'The mean is {mu_x}')

var_x = sum((data - mu_x)**2) / N**2
print(f'The variance is {var_x}')

# Autocovariance function
R = np.empty(N-1)
for k in range(N-1):
    R[k] = (1/N)*sum((data[:N-k] - mu_x)*(data[k:] - mu_x))

# Autocorrelation function
rho = R / R[0]
print(rho[:11])

# Partial Autocorrelation Function
phi_1 = rho[1]
phi_2 = (rho[2] - rho[1]**2) / (1 - rho[1]**2)

# phi(3)
num = np.array([[1, rho[1], rho[1]], [rho[1], 1, rho[2]], [rho[2], rho[1], rho[3]]])
denom = np.array([[1, rho[1], rho[2]], [rho[1], 1, rho[1]], [rho[2], rho[1], 1]])
phi_3 = np.linalg.det(num) / np.linalg.det(denom) 
print(phi_1, phi_2, phi_3)

# Question 3
phi = np.array([-0.296869596607414,	0.186607721035274,	-0.40034528511279,	0.545320768895471,	-0.401418364570333,	0.210947861332928,	-0.192057062077686,	-0.0355730102587001,	-0.034071958788663,	-0.0372972360877496,	-0.0335950848477069,	0.00259183983917936,	0.0139519739099615,	-0.0345126391850128,	0.0281610254569826,	-0.0147796726906295,	-0.0061705082110561,	0.0456733064652696,	0.00292214621090896,	0.0432060127738177,	0.0394151377791362,	0.0021694649512626,	-0.0297632311919447,	0.0480426097132299,	0.0184048066729198,	0.013923700321489,	-0.0188662481271266,	0.0410521782643698,	0.00645134693345504,	0.0101228655005155,	-0.0467653734329765,	-0.0247770993866365,	-0.0441442099170835,	0.00314414663365722,	0.0300181534994412,	-0.0262145031075011,	-0.0108828581494887,	-0.041980704168132,	-0.0246203451014697,	0.0216233423749832])

def AR_order(phi, N):
    sd = 1 / np.sqrt(N)
    l = phi.size

    plt.plot([2*sd]*(l+1), 'k')
    plt.plot([-2*sd]*(l+1), 'k')

    plt.bar(list(range(1,l + 1)), phi)
    plt.show()

# plug in N = 100, 400, 900, or 1600 for N
AR_order(phi, 1600)
